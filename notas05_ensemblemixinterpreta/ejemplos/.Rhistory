library(C50)
library(rpart)
library(rpart.plot)
churn <- read.csv("data/Telco-Customer-Churn.csv")
churn <- churn[,-1]
set.seed(1)
index<-sample(c(1:nrow(churn)), 0.7*nrow(churn))
churnTrain <- churn[index,]
churnTest <- churn[-index,]
summary(churnTrain)
proportionYeschurnTrain = 1324/(1324 + 3606)
proportionYeschurnTrain
#Análisis de proporciones del conjunto Test
summary(churnTest)
proportionYeschurnTest = 545/(545 + 1568)
proportionYeschurnTest
ModeloArbol<-rpart(Churn ~ .,data=churnTrain,parms=list(split="information"))
rpart.plot(ModeloArbol, type=1, extra=100,cex = .7,
box.col=c("gray99", "gray88")[ModeloArbol$frame$yval])
Prediccion <- predict(ModeloArbol, churnTest, type="class") # Prediccción en Test
MC         <- table(churnTest[, "Churn"], Prediccion) # Matriz de Confusión
AciertoTest = MC[1, 1] / (MC[1, 1] + MC[2, 1])
AciertoTest
plotcp(ModeloArbol)
printcp(ModeloArbol)
ModeloArbol2 <- rpart(Churn ~ .,data=churnTrain,parms=list(split="information"),
control = rpart.control(cp = 0.035, minsplit = 8))
rpart.plot(ModeloArbol2, type=1, extra=100,cex = .7,
box.col=c("gray99", "gray88")[ModeloArbol$frame$yval])
Prediccion2 <- predict(ModeloArbol2, churnTest, type="class") # Prediccci?n en Test
MC2         <- table(churnTest[, "Churn"], Prediccion2) # Matriz de Confusi?n
AciertoTest2 = MC2[1, 1] / (MC2[1, 1] + MC2[2, 1])
AciertoTest2
help(cp)
help(rpart)
